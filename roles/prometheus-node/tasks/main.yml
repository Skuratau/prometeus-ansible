---
- name: Creates prometeus directory
  file: path=/opt/prometheus/node_exporter state=directory

- name: untar Prometheus node exporter
  unarchive:
    src: https://github.com/prometheus/node_exporter/releases/download/v0.14.0/node_exporter-0.14.0.linux-amd64.tar.gz
    dest: /opt/prometheus/node_exporter
    remote_src: True

- name: create  Prometheus node env file
  file: path=/opt/prometheus/node_exporter/env
  state: touch

- template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    mode: 777

- service:
    name: node_exporter
    state: restarted
    enabled: yes

- command: "/bin/hostname"
  register: azure_hostname

- debug:
    var: azure_hostname

- template:
    src: node_in_grafana.j2
    dest: /opt/prometheus/node_in_grafana.json

- name: Creating dashboard
  uri:
      url: "http://{{ grafana_creds.url }}/api/dashboards/db/"
      method: POST
      user: "{{ grafana_creds.login }}"
      password: "{{ grafana_creds.pass }}"
      force_basic_auth: yes
      body: "{{ lookup('template', './node_in_grafana.j2') }}"
      body_format: json
      HEADER_Content-Type: "application/json"
  ignore_errors: yes

- lineinfile:
    dest: /var/server/conf/prometheus/prometheus.yml
    insertafter: "#node_exporter_nodes"
    line: "      - '{{azure_hostname.stdout}}:9100'"
    state: present
  delegate_to: "{{ prom_server }}"

- shell: "cd /var/server/conf/ && docker-compose stop && docker-compose up -d"
  delegate_to: "{{ prom_server }}"
